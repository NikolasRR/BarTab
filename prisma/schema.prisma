// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id Int @id @default(autoincrement())
  name String
  email String @unique
  password String
  createdAt DateTime @default(now())
  tables Table[]
  participants Participant[]

  @@map("users")
}

model Table {
  id Int @id @default(autoincrement())
  name String
  user User @relation(fields: [userId], references: [id], onDelete: Cascade)
  createdAt DateTime @default(now())
  userId Int @unique
  tableParticipant Participant[]
  Item Item[]

  @@map("tables")
}

model Participant {
  id Int @id @default(autoincrement())
  name String
  user User @relation(fields: [handlerId], references: [id], onDelete: Cascade)
  handlerId Int
  table Table @relation(fields: [tableId], references: [id], onDelete: Cascade)
  tableId Int
  itemParticipant ItemParticipant[]

  @@unique([name, tableId])
  @@map("participants")
}

model Item {
  id Int @id @default(autoincrement())
  name String
  value Int
  amount Int
  participantsAmount Int
  table Table @relation(fields: [tableId], references: [id], onDelete: Cascade)
  tableId Int
  itemParticipant ItemParticipant[]

  @@map("items")
}

model ItemParticipant {
  id Int @id @default(autoincrement())
  participant Participant @relation(fields: [participantId], references: [id], onDelete: Cascade)
  participantId Int
  item Item @relation(fields: [itemId], references: [id], onDelete: Cascade)
  itemId Int

  @@unique([itemId, participantId])
  @@map("itemParticipants")
}